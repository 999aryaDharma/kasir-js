services:
  # PostgreSQL Service
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      # Ambil variabel dari file .env di root
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5050:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # pgAdmin Service
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "6060:80"
    depends_on:
      - db

  # Express API Service
  express-api:
    build:
      context: ./express-api
    container_name: express_api
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      # Ambil DATABASE_URL dari file .env
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./express-api:/app # Sinkronisasi direktori express-api ke /app
      - /app/node_modules # Cegah node_modules lokal menimpa yang di container
    command: npm run dev

  frontend:
    image: nginx:alpine
    container_name: pos_frontend
    restart: always
    ports:
      - "8080:80" # <-- Frontend akan diakses di http://localhost:8080
    volumes:
      - ./frontend:/usr/share/nginx/html # <-- Sajikan file dari folder pos-frontend

# Deklarasikan named volumes
volumes:
  postgres_data: {}
