version: "3.8"

services:
  # Service Database PostgreSQL
  db:
    image: postgres:15
    container_name: kasir_pos_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Service pgAdmin untuk manajemen database
  pgadmin:
    image: dpage/pgadmin4
    container_name: kasir_pos_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db

  # Service Backend Express API
  express-api:
    build:
      context: ./express-api
    container_name: kasir_pos_api
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - db
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
    volumes:
      - ./express-api:/app
      - /app/node_modules
    command: npm run dev

  # Service Frontend Next.js (Optimized for Development)
  frontend:
    build:
      context: ./frontend-next
    container_name: kasir_pos_frontend
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - express-api
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000/api
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NODE_ENV=development
      - NEXT_WATCH=true

    volumes:
      - ./frontend-next:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
